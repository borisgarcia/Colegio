// <auto-generated />
using System;
using Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ColegioDataContext))]
    [Migration("20240610142001_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Alumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Alumnos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8323dd7-b47a-44f3-833e-dd66910f9ef2"),
                            Apellidos = "Doe",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2024, 6, 10, 8, 20, 0, 694, DateTimeKind.Local).AddTicks(8454),
                            Genero = 1,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Jane"
                        },
                        new
                        {
                            Id = new Guid("2adc4147-1831-42a5-88cd-dda4bae18b0d"),
                            Apellidos = "Doe",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2024, 6, 10, 8, 20, 0, 694, DateTimeKind.Local).AddTicks(8484),
                            Genero = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "John"
                        });
                });

            modelBuilder.Entity("Domain.Models.AlumnoGrado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AlumnoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GradoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Seccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("GradoId");

                    b.ToTable("AlumnoGrados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbcfe11b-96b4-4430-b080-7e1bc83c12ae"),
                            AlumnoId = new Guid("2adc4147-1831-42a5-88cd-dda4bae18b0d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradoId = new Guid("fb0f36cd-98e4-426b-8cad-47425ba09864"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Seccion = "1"
                        },
                        new
                        {
                            Id = new Guid("b57668c0-3494-42c6-9bf4-b62a7681fc47"),
                            AlumnoId = new Guid("d8323dd7-b47a-44f3-833e-dd66910f9ef2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradoId = new Guid("70e283fd-491e-476d-ab4f-f542ab810ee6"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Seccion = "1"
                        });
                });

            modelBuilder.Entity("Domain.Models.Grado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProfesorId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Grados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb0f36cd-98e4-426b-8cad-47425ba09864"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "I A",
                            ProfesorId = new Guid("6c6836f9-6cfc-4619-a4e6-f84b7cf84b96")
                        },
                        new
                        {
                            Id = new Guid("70e283fd-491e-476d-ab4f-f542ab810ee6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "II B",
                            ProfesorId = new Guid("a4e94be4-753a-469a-bca6-55641df746a7")
                        });
                });

            modelBuilder.Entity("Domain.Models.Profesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4e94be4-753a-469a-bca6-55641df746a7"),
                            Apellidos = "Dafoe",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Willem"
                        },
                        new
                        {
                            Id = new Guid("6c6836f9-6cfc-4619-a4e6-f84b7cf84b96"),
                            Apellidos = "Parker",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Peter"
                        });
                });

            modelBuilder.Entity("Domain.Models.AlumnoGrado", b =>
                {
                    b.HasOne("Domain.Models.Alumno", "Alumno")
                        .WithMany("AlumnoGrados")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Grado", "Grado")
                        .WithMany("AlumnoGrados")
                        .HasForeignKey("GradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Grado");
                });

            modelBuilder.Entity("Domain.Models.Grado", b =>
                {
                    b.HasOne("Domain.Models.Profesor", "Profesor")
                        .WithMany("Grados")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Domain.Models.Alumno", b =>
                {
                    b.Navigation("AlumnoGrados");
                });

            modelBuilder.Entity("Domain.Models.Grado", b =>
                {
                    b.Navigation("AlumnoGrados");
                });

            modelBuilder.Entity("Domain.Models.Profesor", b =>
                {
                    b.Navigation("Grados");
                });
#pragma warning restore 612, 618
        }
    }
}
